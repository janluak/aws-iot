name: build python package and upload to pypi

on:
  workflow_run:
    workflows: ["run python tests"]
    branches: [ main ]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine build
          python -m pip install --use-feature=in-tree-build .
      - name: get version of package
        id: get_version
        run: |
          echo -e "import ${{ github.event.repository.name }}\nprint(${{ github.event.repository.name }}.__version__)" >> get_version.py
          echo ::set-output name=VERSION::"$(python get_version.py)"
      - name: build package
        run: |
          python setup.py sdist bdist_wheel
      - name: release on github
        uses: marvinpinto/action-automatic-releases@latest
        id: create_release
        with:
          draft: false
          prerelease: false
          automatic_release_tag: v${{ steps.get_version.outputs.VERSION }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: v${{ steps.get_version.outputs.VERSION }}
          files: dist/*
      - name: save dist for upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}